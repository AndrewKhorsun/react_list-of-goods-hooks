{"version":3,"sources":["App.tsx","component/goodList.tsx","index.tsx"],"names":["SortBy","GoodList","goods","className","length","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","isStarted","setIsStarted","none","sort","setSort","lengthLimit","setLimit","visibleGoods","filter","g1","g2","alf","localeCompare","reverse","type","onClick","value","onChange","element","target","digit","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,qCCZQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,qCACE,oBAAIC,UAAU,QAAd,wBACA,qBAAKA,UAAU,WAAf,SAEoB,IAAjBD,EAAME,OACF,oDACAF,EAAMG,KAAI,SAAAC,GAAI,OACf,oBAAIH,UAAU,iBAAd,SACE,6BAAKG,KAD6BA,YDTxCC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGP,O,aAAAA,I,mBAAAA,I,gBAAAA,M,KAME,IAAMQ,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwBJ,mBAAST,EAAOc,MAAxC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCP,mBAAS,GAAzC,mBAAOQ,EAAP,KAAoBC,EAApB,KAGMC,EAAe,UAAIZ,GACtBa,QAAO,SAAAd,GAAI,OAAIA,EAAKF,QAAUa,KAEjCE,EAAaJ,MAAK,SAACM,EAAIC,GACrB,OAAQP,GACN,KAAKf,EAAOuB,IACV,OAAOF,EAAGG,cAAcF,GAC1B,KAAKtB,EAAOI,OACV,OAAOiB,EAAGjB,OAASkB,EAAGlB,OAExB,QACE,OAAO,MAITM,GACFS,EAAaM,UAWf,OACE,sBAAKtB,UAAU,MAAf,UACIS,EAUE,cAAC,EAAD,CAAUV,MAAOiB,IARjB,wBACEO,KAAK,SACLvB,UAAU,iCACVwB,QAAS,kBAAMd,GAAa,IAH9B,mBAUJ,sBAAKV,UAAU,eAAf,UACGS,GACC,wBACET,UAAU,oBACVuB,KAAK,SACLC,QAAS,kBAAMhB,GAAeD,IAHhC,qBAQDE,GACC,wBACET,UAAU,oBACVuB,KAAK,SACLC,QAAS,kBAAMX,EAAQhB,EAAOuB,MAHhC,iCAQDX,GACC,wBACET,UAAU,oBACVuB,KAAK,SACLC,QAAS,kBAAMX,EAAQhB,EAAOI,SAHhC,4BAQDQ,GACC,wBACET,UAAU,oBACVuB,KAAK,SACLC,QAAS,kBApDfX,EAAQhB,EAAOc,MACfH,GAAc,GACdO,EAAS,IA+CL,mBAQDN,GACC,qBAAKT,UAAU,qBAAf,SACE,wBACEyB,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAaZ,GAAUY,EAAQC,OAAOH,QAFlD,SAlFS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAuFhCvB,KAAI,SAAA2B,GAAK,OACR,wBACEJ,MAAOI,EADT,SAIGA,GAFIA,iBEpHzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5d65cb10.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { GoodList } from './component/goodList';\n\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  alf,\n  length,\n  none,\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const [sort, setSort] = useState(SortBy.none);\n  const [lengthLimit, setLimit] = useState(0);\n  const wordLength = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  const visibleGoods = [...goodsFromServer]\n    .filter(good => good.length >= lengthLimit);\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sort) {\n      case SortBy.alf:\n        return g1.localeCompare(g2);\n      case SortBy.length:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  const reset = () => {\n    return (\n      setSort(SortBy.none),\n      setIsReversed(false),\n      setLimit(0)\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            className=\"button is-warning button--size\"\n            onClick={() => setIsStarted(true)}\n          >\n            START\n          </button>\n        )\n        : <GoodList goods={visibleGoods} />}\n\n      <div className=\"button__flex\">\n        {isStarted && (\n          <button\n            className=\"button is-success\"\n            type=\"button\"\n            onClick={() => setIsReversed(!isReversed)}\n          >\n            REVERSE\n          </button>\n        )}\n        {isStarted && (\n          <button\n            className=\"button is-success\"\n            type=\"button\"\n            onClick={() => setSort(SortBy.alf)}\n          >\n            Sort alphabetically\n          </button>\n        )}\n        {isStarted && (\n          <button\n            className=\"button is-success\"\n            type=\"button\"\n            onClick={() => setSort(SortBy.length)}\n          >\n            Sort by length\n          </button>\n        )}\n        {isStarted && (\n          <button\n            className=\"button is-success\"\n            type=\"button\"\n            onClick={() => reset()}\n          >\n            Reset\n          </button>\n        )}\n        {isStarted && (\n          <div className=\"select is-multiple\">\n            <select\n              value={lengthLimit}\n              onChange={(element) => setLimit(+element.target.value)}\n            >\n              {wordLength\n                .map(digit => (\n                  <option\n                    value={digit}\n                    key={digit}\n                  >\n                    {digit}\n                  </option>\n                ))}\n            </select>\n          </div>\n\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <>\n    <h1 className=\"title\">Goods list</h1>\n    <div className=\"goodList\">\n\n      {goods.length === 0\n        ? ('Oops...It seems there are no products in the list')\n        : (goods.map(good => (\n          <ul className=\"goodList__good\" key={good}>\n            <li>{good}</li>\n          </ul>\n        )))}\n    </div>\n  </>\n\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}